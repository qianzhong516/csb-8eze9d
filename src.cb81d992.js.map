{"version":3,"sources":["src/scratch_card.ts","src/index.ts"],"names":[],"mappings":";;;AAOa,aAAA,IAAA,EAAA,MAAA,KAAA,UAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAAb,IAAA,EAAA,WAUE,SAAA,EACmB,EACA,GADA,KAAA,OAAA,EACA,KAAA,aAAA,EATX,KAAA,OAAiB,CACvB,KAAM,aACN,SAAU,GACV,YAAa,GACb,UAAW,QAOX,IAAM,EAAM,EAAO,WAAW,MACxB,EAAY,EAAa,WAAW,MAE1C,IAAK,IAAQ,EACX,MAAM,IAAI,MAAM,uCAGlB,KAAK,IAAM,EACX,KAAK,UAAY,EAkDrB,OA/CE,EAAA,UAAA,UAAA,SAAU,GACR,KAAK,OAAM,EAAA,EAAA,GACN,KAAK,QACL,IAIP,EAAA,UAAA,KAAA,SAAK,EAAe,GAApB,IAAA,EAAA,KACO,KAAK,KAAQ,KAAK,YAIvB,KAAK,OAAO,MAAQ,EACpB,KAAK,OAAO,OAAS,EACrB,KAAK,aAAa,MAAQ,EAC1B,KAAK,aAAa,OAAS,EAE3B,KAAK,UAAU,KAAO,GAAA,OAAG,KAAK,OAAO,SAAQ,YAC7C,KAAK,UAAU,SAAS,KAAK,OAAO,KAAM,GAAI,IAC9C,KAAK,aAAa,MAAM,QAAU,OAElC,KAAK,IAAI,UAAY,KAAK,OAAO,UACjC,KAAK,IAAI,SAAS,EAAG,EAAG,EAAO,GAC/B,KAAK,IAAI,UAAY,KAAK,OAAO,YACjC,KAAK,IAAI,YAAc,KAAK,IAAI,cAC9B,KAAK,aACL,aAGF,KAAK,OAAO,iBAAiB,YAAa,SAAC,GACzC,OAAA,EAAK,MAAM,EAAE,QAAS,EAAE,WAG1B,KAAK,OAAO,iBAAiB,UAAW,SAAC,GACvC,OAAA,EAAK,IAAI,EAAE,QAAS,EAAE,aAIlB,EAAA,UAAA,MAAR,SAAc,EAAW,GACvB,KAAK,IAAI,YACT,KAAK,IAAI,OAAO,EAAG,IAGb,EAAA,UAAA,IAAR,SAAY,EAAW,GACrB,KAAK,IAAI,OAAO,EAAG,GACnB,KAAK,IAAI,UAEb,EAxEA,GAAa,QAAA,YAAA;;ACKa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAZ1B,QAAA,eACA,IAAA,EAAA,QAAA,kBAEM,EAAS,SAAS,eAAe,SACjC,EAAe,SAAS,eAAe,UACvC,EAAc,IAAI,EAAA,YAAY,EAAQ,GAE5C,EAAY,UAAU,CACpB,KAAM,aACN,YAAa,KAGf,EAAY,KAAK,IAAK","file":"src.cb81d992.js","sourceRoot":"..","sourcesContent":["type Config = {\n  text: string;\n  fontSize: number;\n  strokeWidth: number;\n  fillStyle: string;\n};\n\nexport class ScratchCard {\n  private ctx: CanvasRenderingContext2D;\n  private targetCtx: CanvasRenderingContext2D;\n  private config: Config = {\n    text: \"Dummy Text\",\n    fontSize: 30,\n    strokeWidth: 20,\n    fillStyle: \"pink\"\n  };\n\n  constructor(\n    private readonly canvas: HTMLCanvasElement,\n    private readonly targetCanvas: HTMLCanvasElement\n  ) {\n    const ctx = canvas.getContext(\"2d\");\n    const targetCtx = targetCanvas.getContext(\"2d\");\n\n    if (!ctx || !targetCtx) {\n      throw new Error(\"cannot get canvas rendering context\");\n    }\n\n    this.ctx = ctx;\n    this.targetCtx = targetCtx;\n  }\n\n  configure(config: Partial<Config>) {\n    this.config = {\n      ...this.config,\n      ...config\n    };\n  }\n\n  init(width: number, height: number) {\n    if (!this.ctx || !this.targetCtx) {\n      return;\n    }\n\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.targetCanvas.width = width;\n    this.targetCanvas.height = height;\n\n    this.targetCtx.font = `${this.config.fontSize}px serif`;\n    this.targetCtx.fillText(this.config.text, 10, 50);\n    this.targetCanvas.style.display = \"none\";\n\n    this.ctx.fillStyle = this.config.fillStyle;\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.lineWidth = this.config.strokeWidth;\n    this.ctx.strokeStyle = this.ctx.createPattern(\n      this.targetCanvas,\n      \"no-repeat\"\n    )!;\n\n    this.canvas.addEventListener(\"mousedown\", (e: MouseEvent) =>\n      this.start(e.clientX, e.clientY)\n    );\n\n    this.canvas.addEventListener(\"mouseup\", (e: MouseEvent) =>\n      this.end(e.clientX, e.clientY)\n    );\n  }\n\n  private start(x: number, y: number) {\n    this.ctx.beginPath();\n    this.ctx.moveTo(x, y);\n  }\n\n  private end(x: number, y: number) {\n    this.ctx.lineTo(x, y);\n    this.ctx.stroke();\n  }\n}\n","import \"./style.css\";\nimport { ScratchCard } from \"./scratch_card\";\n\nconst canvas = document.getElementById(\"panel\") as HTMLCanvasElement;\nconst targetCanvas = document.getElementById(\"target\") as HTMLCanvasElement;\nconst scratchCard = new ScratchCard(canvas, targetCanvas);\n\nscratchCard.configure({\n  text: \"I love you\",\n  strokeWidth: 80\n});\n\nscratchCard.init(500, 800);\n"]}